#version 450

// Define a work group size to be 8x8.
layout(local_size_x = 8, local_size_y = 8) in;

/* uvec3 gl_NumWorkGroups; // Global work group size we gave to glDispatchCompute() */
/* uvec3 gl_WorkGroupSize; // Local work group size we defined with layout */
/* uvec3 gl_WorkGroupID; // Position of current invocation in global work group */
/* uvec3 gl_LocalInvocationID; // Position of current invocation in local work group */
/* uvec3 gl_GlobalInvocationID; // Unique index of current invocation in global work group */
/* uint gl_LocalInvocationIndex; // 1d index representation of gl_LocalInvocationID */

// Use the image2D sampler to address specific pixels directly.
layout(rgba32f, binding = 0) uniform image2D present;
layout(rgba32f, binding = 1) uniform image2D back_a;
layout(rgba32f, binding = 2) uniform image2D front_a;
layout(rgba32f, binding = 3) uniform image2D back_b;
layout(rgba32f, binding = 4) uniform image2D front_b;
layout(rgba32f, binding = 5) uniform image2D back_c;
layout(rgba32f, binding = 6) uniform image2D front_c;

void main() {
    ivec2 ipixel_coords = ivec2(gl_GlobalInvocationID.xy);

    vec3 pixel_back_a = imageLoad(back_a, ipixel_coords).xyz;
    vec3 pixel_back_b = imageLoad(back_b, ipixel_coords).xyz;
    vec3 pixel_back_c = imageLoad(back_c, ipixel_coords).xyz;

    imageStore(present, ipixel_coords, vec4(pixel_back_a + pixel_back_b + pixel_back_c, 1));
}
